#!/usr/bin/env bash
set -eE

DIRNAME=`dirname "$0"`
READLINK=`readlink "$0" || true`
LINKDIRNAME=`dirname "$READLINK"`
NORMDIR=$LINKDIRNAME
[ ! "${LINKDIRNAME:0:1}" = "/" ] && NORMDIR="$DIRNAME/$LINKDIRNAME"
NORMDIR=`cd "$NORMDIR"; pwd`

. $NORMDIR/norm_common

## find shasum binary
SHASUM_BIN=shasum
[[ -z `which $SHASUM_BIN` ]] 2>/dev/null && SHASUM_BIN=sha1sum

usage() {
    echo "Usage: "
    echo "    $0 install [-f] <package> [package ...]"
    echo "    $0 sub"
    echo "    $0 ldd"
}

cmd_install() {
	force=
	while getopts ":p:hf" opt; do
	case $opt in
	    f)
	    force=1
	    ;;
	    \?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	    exit 64
	    ;;
	    :)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    exit 64
	    ;;
	esac
	done
	shift $((OPTIND-1))
	[ -z "$1" ] && echo "Need package names" && exit 64
	if [ ! -z "$force" ]; then
		echo "Forcing reinstall of packages: $@"
		for pkg in "$@"; do rm -f "$DEFAULT_PREFIX/$pkg.installed"; done
	else
		echo "Installing packages: $@"
	fi
	setup_traps
	setup_prefix "$DEFAULT_PREFIX"
	compile_package "$@"
}

cmd_sub() {
	echo "Creating subshell so you can compile and link against norm libs"
	setup_prefix "$DEFAULT_PREFIX"
	$SHELL -i
}

cmd_ldd() {
	$NORMDIR/norm-ldd "$DEFAULT_PREFIX" "$@"
}

case "$1" in
    install)
	shift
	cmd_install "$@"
	;;
    sub)
	shift
	cmd_sub "$@"
	;;
    ldd)
	shift
	cmd_ldd "$@"
	;;
    *)
	echo "Uknown command: $1" >&2
	usage
	exit 64
	;;
esac

