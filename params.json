{"name":"NORM","tagline":"You donâ€™t need root to install anything","body":"# Non-root package manager\r\n\r\nDon't have root? Not a problem.\r\n\r\nIf your compiler works and can compile a simple \"hello world\" program, you can compile [any package listed here](https://github.com/hmage/norm/tree/master/packages). \r\n\r\nIf you don't have root, it's very likely that software you want to use isn't the latest version. And, in some cases, downloading binaries won't help -- your libc might be too old to run them.\r\n\r\n## Examples\r\n * `norm install gcc` -- downloads, compiles and installs gcc 4.9. Great way to try out new compiler.\r\n * `norm install ffmpeg` -- if you're on Debian wheezy, then your ffmpeg is _very_ outdated. This will gets you the newest ffmpeg with support for x264, x265, webm, opus and AAC.\r\n * `norm install git` -- similarly, your system copy of git might not support new features like push to deploy, reference cloning and shallow cloning.\r\n * `norm install fetchmail maildrop dovecot` -- you don't need root to spin up your own IMAP server, either. Change the listening port to something higher than 1024, set up virtual accounts and you're good to go.\r\n * `norm install mc` -- latest midnight commander is much nicer than it was a few years ago, don't be stuck in the past.\r\n * `norm install openssh` -- your system openssh client might not support ECDSA and ed25519, which is increasingly problematic as the world around you moves away from DSA and RSA.\r\n * `norm install fontconfig` -- if font rendering on your machine looks horrible, install this, set up `LD_LIBRARY_PATH` to `~/norm/lib` in bashrc (before interactive check cutoff) and restart the app.\r\n * `norm install virtual/forchrome` -- You want a shiny new chrome and don't have root? First, install this, then set up `LD_LIBRARY_PATH` like above, then download chrome binary from official site and run `./chrome --no-sandbox`. Voila, you have latest chrome with latest flash.\r\n\r\n## Hardcoded paths\r\n\r\nThe compiled binaries are not for distribution -- compilation process adds hardcoded paths and they won't work in any other location.\r\n\r\n# Adding new package\r\n\r\nPackage files are just bash scripts, this is a bare minimum example:\r\n\r\n```bash\r\n#!/bin/bash\r\ndepends_on libacl libattr\r\n\r\nfetch_source http://ftpmirror.gnu.org/tar/tar-1.28.tar.gz cd30a13bbfefb54b17e039be7c43d2592dd3d5d0\r\ndo_unpack_compile\r\n```\r\n\r\n * `depends_on` -- executes other package scripts.\r\n * `fetch_source` -- downloads the source code using curl and verifies SHA1 checksum. \r\n    (If it's already downloaded, just verifies the SHA1 checksum).\r\n * `do_unpack_compile` -- unpacks the source code, runs configure with prefix set to `~/norm`, then make and then make install.\r\n\r\nMost software only needs these commands to successfully compile. For see more complex package scripts, go [here](https://github.com/hmage/norm/tree/master/packages).\r\n\r\nI'm open to pull requests.\r\n","google":"UA-50765688-4","note":"Don't delete this file! It's used internally to help with page regeneration."}